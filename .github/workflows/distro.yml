name: Distribution - Test and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
        run:
          shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Install System Dependencies
        run: |
          sudo apt update
          sudo apt-get install build-essential curl wget cmake gfortran automake \
          autoconf libtool m4 libgomp1 libreadline-dev libncurses-dev pkg-config \
          libcairo2-dev libpango1.0-dev libxt-dev libx11-dev -y

      - name: Check Latest Release
        id: checkrel
        run: |
          if rel=$(curl -L --connect-timeout 5 https://www.classe.cornell.edu/~cesrulib/downloads/latest_distribution_file_prefix)
          then
             echo $rel | grep -E -q '^bmad_dist_[0-9]{4}_[0-9]{4}-[0-9]$' || exit 1
             echo Latest release is: $rel
             echo BMADDIST=$rel >> $GITHUB_ENV
             echo BMADTAG=$(echo $rel | cut -c11- | tr -d _) >> $GITHUB_ENV
          else
             exit 1
          fi

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/artifact
          key: ${{ runner.os }}-${{ env.BMADDIST }}

      - name: Install Bmad - ${{ env.BMADDIST }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo Fake success
          exit 0

      - name: Run Tests - ${{ env.BMADDIST }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo Fake failure
          exit 1

      - name: Add Empty Commit for New Release
        if: steps.cache.outputs.cache-hit != 'true'
        run: echo Would have committed new release
        
      - name: Record Release Commit Hash
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "**** Release Commit is: `git rev-parse HEAD`"
          echo "RELEASE_COMMIT=`git rev-parse HEAD`" >> $GITHUB_ENV

      - name: Move Artifact Into Upload Area
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cp ~/artifact/*.tgz ${GITHUB_WORKSPACE}

      - name: Deploy New Release for Distribution - ${{ env.BMADDIST }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: echo I would have made a release

      - name: Report Failure Status on Slack
        if: failure() && steps.checkrel.conclusion == 'success'
        run: echo I would have reported failure on Slack
        
      - name: Report New Release on Slack
        if: success() && steps.cache.outputs.cache-hit != 'true'
        run: echo I would have reported a new release on Slack
        
