name: Distribution - Test and Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */1 * * *'  # every hour

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
        run:
          shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Install System Dependencies
        run: |
          sudo apt update
          sudo apt-get install build-essential curl wget cmake gfortran automake \
          autoconf libtool m4 libgomp1 libreadline-dev libncurses-dev pkg-config \
          libcairo2-dev libpango1.0-dev libxt-dev libx11-dev -y

      - name: Check Latest Release
        run: |
          echo "Latest release is: $(curl https://www.classe.cornell.edu/~cesrulib/downloads/latest_distribution_file_prefix)"

          # Set Environment variable for further steps
          echo "BMADDIST=$(curl https://www.classe.cornell.edu/~cesrulib/downloads/latest_distribution_file_prefix)" >> $GITHUB_ENV
          echo "BMADTAG=$(curl https://www.classe.cornell.edu/\~cesrulib/downloads/latest_distribution_file_prefix | cut -c11- | tr -d _)" >> $GITHUB_ENV

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/artifact
          key: ${{ runner.os }}-${{ env.BMADDIST }}

      - name: Install Bmad - ${{ env.BMADDIST }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: .github/scripts/install_bmad.sh

      - name: Run Tests - ${{ env.BMADDIST }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: .github/scripts/run_tests.sh

      - name: Add Empty Commit for New Release
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'main'
          message: "Update distribution to ${{ env.BMADDIST }}"
          empty: true

      - name: Record Release Commit Hash
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "**** Release Commit is: `git rev-parse HEAD`"
          echo "RELEASE_COMMIT=`git rev-parse HEAD`" >> $GITHUB_ENV

      - name: Move Artifact Into Upload Area
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cp ~/artifact/*.tgz ${GITHUB_WORKSPACE}

      - name: Deploy New Release for Distribution - ${{ env.BMADDIST }}
        if: steps.cache.outputs.cache-hit != 'true'
        uses: softprops/action-gh-release@v0.1.6
        with:
          tag_name: "${{ env.BMADTAG }}"
          target_commitish: "${{ env.RELEASE_COMMIT }}"
          fail_on_unmatched_files: true
          draft: false
          body: "Bmad Distribution - ${{ env.BMADDIST }}"
          files: |
            ${{ env.BMADDIST }}.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Report Failure Status on Slack
        if: failure()
        uses: ravsamhq/notify-slack-action@1.4.0
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
          notification_title: 'Bmad Distribution Pipeline Failed'
          message_format: ':poop: *{workflow}* failed. Please check more details at <https://github.com/bmad-sim/bmad_distribution/actions/workflows/distro.yml|{repo}>.'
          footer: ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Report New Release on Slack
        if: success() && steps.cache.outputs.cache-hit != 'true'
        uses: ravsamhq/notify-slack-action@1.4.0
        with:
          status: ${{ job.status }}
          notification_title: 'Bmad Distribution Pipeline'
          message_format: ':tada: *{workflow}* produced a new release of Bmad. Check it out at <https://github.com/bmad-sim/bmad_distribution/releases|{repo}>.'
          footer: ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
